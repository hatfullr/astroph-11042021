# In this example we will learn how we can use the
# GPU to color in all the pixels on a matplotlib
# plot.

import matplotlib.pyplot as plt
from numba import cuda
import numpy as np
import math

# Create a Matplotlib figure with an associated
# axis
fig, ax = plt.subplots()

# Define our image's resolution
xpixels = 10000
ypixels = 10000

# Set the data limits to ensure an equal aspect ratio
xmin, xmax = 0., 1.
ymin, ymax = 0., 1.
ax.set_xlim(xmin,xmax)
ax.set_ylim(ymin,ymax)

# We will use Matplotlib's ax.imshow method to make
# a circle with a solid color. First, we need to
# calculate the data that we will send to ax.imshow.
# It will be a 2D grid of RGB values.
data = np.full((xpixels,ypixels,3),np.nan)

color = (1,0,0) # Make a red circle
center = (0.5*(xmax+xmin),0.5*(ymax+ymin))
radius = 0.25

dx = (xmax-xmin)/float(xpixels)
dy = (ymax-ymin)/float(ypixels)

for i in range(xpixels):
    xpos = xmin + i*dx + 0.5*dx # center on the pixel
    for j in range(ypixels):
        ypos = ymin + j*dy + 0.5*dy
        r = math.sqrt((xpos-center[0])**2+(ypos-center[1])**2)
        if r < radius:
            data[i,j] = color
        

ax.imshow(data,extent=[xmin,xmax,ymin,ymax])

plt.show()
